@using BlazorApp.Shared
@using BlazorApp.Shared.Services
@using System.Reflection
@using Microsoft.AspNetCore.Components.WebAssembly.Services
@inject IMfAppService AppService
@inject NavigationManager Navigation
@inject LazyAssemblyLoader AssemblyLoader
@inject IModuleRegistry ModuleRegistry
@inject ILogger<App> Logger

<Router AppAssembly="@typeof(Program).Assembly" OnNavigateAsync="OnNavigateAsync" AdditionalAssemblies="lazyLoadedAssemblies">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="typeof(MainLayout)" />
    </Found>
    <NotFound>
        <h3>Sorry, there's nothing at this address</h3>
    </NotFound>
</Router>

@code {
    private List<Assembly> lazyLoadedAssemblies = [];
    private Dictionary<string, string> moduleMappings;

    protected override async Task OnInitializedAsync()
    {
        moduleMappings = ModuleRegistry.GetModuleMappings();
    }

    private async Task OnNavigateAsync(NavigationContext args)
    {
        try
        {
            Console.WriteLine($"[Router] Navigating to: {args.Path}");

            var currentPath = args.Path.Split('/')[0];

            if (moduleMappings.TryGetValue(currentPath, out var moduleAssembly))
            {
                var moduleDll = $"{moduleAssembly}";
                var assemblies = await AssemblyLoader.LoadAssembliesAsync(
                    new[] { moduleDll });
                lazyLoadedAssemblies.AddRange(assemblies);

            }
            else
            {
                Console.WriteLine($"[Router] No module found for: {args.Path}");
            }
        }
        catch (Exception ex)
        {
            Logger.LogError("Error loading assemblies: {Message}", ex.Message);
        }

    }
}